// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/user/user.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "eventdrivensystem/internal/models/user"
	util "eventdrivensystem/pkg/util"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gorm "gorm.io/gorm"
)

// MockUserDomainHandler is a mock of UserDomainHandler interface.
type MockUserDomainHandler struct {
	ctrl     *gomock.Controller
	recorder *MockUserDomainHandlerMockRecorder
}

// MockUserDomainHandlerMockRecorder is the mock recorder for MockUserDomainHandler.
type MockUserDomainHandlerMockRecorder struct {
	mock *MockUserDomainHandler
}

// NewMockUserDomainHandler creates a new mock instance.
func NewMockUserDomainHandler(ctrl *gomock.Controller) *MockUserDomainHandler {
	mock := &MockUserDomainHandler{ctrl: ctrl}
	mock.recorder = &MockUserDomainHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserDomainHandler) EXPECT() *MockUserDomainHandlerMockRecorder {
	return m.recorder
}

// BeginTx mocks base method.
func (m *MockUserDomainHandler) BeginTx(ctx context.Context) *gorm.DB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BeginTx", ctx)
	ret0, _ := ret[0].(*gorm.DB)
	return ret0
}

// BeginTx indicates an expected call of BeginTx.
func (mr *MockUserDomainHandlerMockRecorder) BeginTx(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BeginTx", reflect.TypeOf((*MockUserDomainHandler)(nil).BeginTx), ctx)
}

// CreateUser mocks base method.
func (m *MockUserDomainHandler) CreateUser(ctx context.Context, user *models.User, opts ...util.DbOptions) (*models.User, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, user}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateUser", varargs...)
	ret0, _ := ret[0].(*models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockUserDomainHandlerMockRecorder) CreateUser(ctx, user interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, user}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockUserDomainHandler)(nil).CreateUser), varargs...)
}
